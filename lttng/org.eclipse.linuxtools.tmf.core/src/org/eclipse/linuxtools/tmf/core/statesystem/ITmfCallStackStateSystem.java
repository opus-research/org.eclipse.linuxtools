/*******************************************************************************
 * Copyright (c) 2013 Ericsson
 *
 * All rights reserved. This program and the accompanying materials are
 * made available under the terms of the Eclipse Public License v1.0 which
 * accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Patrick Tasse - Initial API and implementation
 *******************************************************************************/

package org.eclipse.linuxtools.tmf.core.statesystem;

/**
 * String constants used by the Call Stack state system
 *
 * The attribute tree should have the following structure:
 * <root>
 *   \-- Threads
 *        |-- Thread 1
 *        |    \-- CallStack (stack-attribute)
 *        |         |-- 1 (auto-generated by stack-attribute push)
 *        |         |-- 2 (auto-generated by stack-attribute push)
 *        |        ...
 *        |         \-- n (auto-generated by stack-attribute push)
 *        |-- Thread 2
 *        |    \-- CallStack (stack-attribute)
 *        |         |-- 1 (auto-generated by stack-attribute push)
 *        |         |-- 2 (auto-generated by stack-attribute push)
 *        |        ...
 *        |         \-- n (auto-generated by stack-attribute push)
 *       ...
 *        \-- Thread n
 *             \-- CallStack (stack-attribute)
 *                  |-- 1 (auto-generated by stack-attribute push)
 *                  |-- 2 (auto-generated by stack-attribute push)
 *                 ...
 *                  \-- n (auto-generated by stack-attribute push)
 *
 * @since 2.0
 */
public class ITmfCallStackStateSystem {

    /** State system ID */
    public static final String ID = "org.eclipse.linuxtools.tmf.callstack"; //$NON-NLS-1$
    /** Thread attribute */
    public static final String THREADS = "Threads"; //$NON-NLS-1$
    /** CallStack stack-attribute */
    public static final String CALL_STACK = "CallStack"; //$NON-NLS-1$
}
