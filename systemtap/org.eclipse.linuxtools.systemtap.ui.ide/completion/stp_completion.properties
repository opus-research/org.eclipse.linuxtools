syscall.accept(name:string,sockfd:long,addr_uaddr:long,addrlen_uaddr:long,argstr:string)
syscall.access(name:string,pathname:string,mode:long,mode_str:string,argstr:string)
syscall.acct(name:string,filename:string,argstr:string)
syscall.add_key(name:string,type_uaddr:long,description_auddr:long,payload_uaddr:long,plen:long,ringid:long,argstr:string)
syscall.adjtimex(name:string,argstr:string)
syscall.alarm(name:string,seconds:long,argstr:string)
syscall.arch_prctl(name:string,code:long,addr:long,argstr:string)
syscall.bdflush(name:string,func:long,data:long,data_str:string,argstr:string)
syscall.bind(name:string,sockfd:long,my_addr_uaddr:long,addrlen:long,argstr:string)
syscall.brk(name:string,brk:long,argstr:string)
syscall.capget(name:string,header_uaddr:long,data_uaddr:long,argstr:string)
syscall.capset(name:string,header_uaddr:long,data_uaddr:long,argstr:string)
syscall.chdir(name:string,path:string,argstr:string)
syscall.chmod(name:string,path:string,mode:long,argstr:string)
syscall.chown(name:string,path:string,owner:long,group:long,argstr:string)
syscall.chown16(name:string,path:string,owner:long,group:long,argstr:string)
syscall.chroot(name:string,path:string,argstr:string)
syscall.clock_getres(name:string,clk_id:long,clk_id_str:string,res_uaddr:long,argstr:string)
syscall.clock_gettime(name:string,clk_id:long,clk_id_str:string,argstr:string)
syscall.clock_nanosleep(name:string,flag_str:string,argstr:string)
syscall.clock_settime(name:string,clk_id:long,clk_id_str:string,tp_uaddr:long,argstr:string)
syscall.close(name:string,fd:long,argstr:string)
syscall.compat_adjtimex(name:string,argstr:string)
syscall.compat_clock_nanosleep(name:string,flag_str:string,argstr:string)
syscall.compat_execve(name:string,filename:string,args:string,argstr:string)
syscall.compat_futex(name:string,futex_uaddr:long,op:long,val:long,utime_uaddr:long,uaddr2_uaddr:long,val3:long,argstr:string)
syscall.compat_futimesat(name:string,dirfd:long,filename_uaddr:long,filename:string,tvp_uaddr:long,argstr:string)
syscall.compat_getitimer(name:string,which:long,value_uaddr:long,argstr:string)
syscall.compat_io_setup(name:string,maxevents:long,ctxp_uaddr:long,argstr:string)
syscall.compat_io_submit(name:string,ctx_id:long,nr:long,iocbpp_uaddr:long,argstr:string)
syscall.compat_nanosleep(name:string,req_uaddr:long,rem_uaddr:long,argstr:string)
syscall.compat_ppoll(name:string,argstr:string)
syscall.compat_pselect6(name:string,argstr:string)
syscall.compat_pselect7a(name:string,argstr:string)
syscall.compat_select(name:string,n:long,readfds_uaddr:long,writefds_uaddr:long,exceptfds_uaddr:long,timeout_uaddr:long,argstr:string)
syscall.compat_setitimer(name:string,which:long,value_uaddr:long,ovalue_uaddr:long,argstr:string)
syscall.compat_signalfd(name:string,argstr:string)
syscall.compat_sys_msgctl(name:string,argstr:string)
syscall.compat_sys_msgrcv(name:string,argstr:string)
syscall.compat_sys_msgsnd(name:string,argstr:string)
syscall.compat_sys_recvmsg(name:string,s:long,msg_uaddr:long,flags:long,argstr:string)
syscall.compat_sys_semctl(name:string,argstr:string)
syscall.compat_sys_semtimedop(name:string,semid:long,sops_uaddr:long,nsops:long,timeout_uaddr:long,argstr:string)
syscall.compat_sys_sendmsg(name:string,s:long,msg_uaddr:long,flags:long,argstr:string)
syscall.compat_sys_shmat(name:string,first:long,second:long,third:long,uptr_uaddr:long,argstr:string)
syscall.compat_sys_shmctl(name:string,first:long,second:long,uptr_uaddr:long,argstr:string)
syscall.compat_sys_utimes(name:string,filename:string,argstr:string)
syscall.compat_utime(name:string,filename_uaddr:long,filename:string,buf_uaddr:long,actime:long,modtime:long,argstr:string)
syscall.compat_utimensat(name:string,argstr:string)
syscall.compat_vmsplice(name:string,argstr:string)
syscall.connect(name:string,sockfd:long,serv_addr_uaddr:long,addrlen:long,argstr:string)
syscall.creat(name:string,mode:long,pathname:string,argstr:string)
syscall.delete_module(name:string,name_user:string,flags:long,argstr:string)
syscall.dup(name:string,oldfd:long,argstr:string)
syscall.dup2(name:string,oldfd:long,newfd:long,argstr:string)
syscall.epoll_create(name:string,size:long,argstr:string)
syscall.epoll_ctl(name:string,epfd:long,op:long,op_str:string,fd:long,event_uaddr:long,argstr:string)
syscall.epoll_pwait(name:string,argstr:string)
syscall.epoll_wait(name:string,epfd:long,events_uaddr:long,maxevents:long,timeout:long,argstr:string)
syscall.eventfd(name:string,argstr:string)
syscall.execve(name:string,filename:string,args:string,argstr:string)
syscall.exit(name:string,status:long,argstr:string)
syscall.exit_group(name:string,status:long,argstr:string)
syscall.faccessat(name:string,dfd:long,dfd_str:string,filename:long,filename_str:string,mode:long,mode_str:string,argstr:string)
syscall.fadvise64(name:string,fs:long,offset:long,len:long,advice:long,argstr:string)
syscall.fadvise64_64(name:string,fs:long,offset:long,len:long,advice:long,argstr:string)
syscall.fchdir(name:string,fd:long,argstr:string)
syscall.fchmod(name:string,fildes:long,mode:long,argstr:string)
syscall.fchmodat(name:string,dfd:long,dfd_str:string,filename:long,filename_str:string,mode:long,argstr:string)
syscall.fchown(name:string,fd:long,owner:long,group:long,argstr:string)
syscall.fchown16(name:string,fd:long,owner:long,group:long,argstr:string)
syscall.fchownat(name:string,dfd:long,dfd_str:string,filename:long,filename_str:string,user:long,group:long,flag:long,flag_str:string,argstr:string)
syscall.fcntl(name:string,fd:long,cmd:long,cmd_str:string,arg:long,argstr:string)
syscall.fdatasync(name:string,fd:long,argstr:string)
syscall.fgetxattr(name:string,filedes:long,name2:string,value_uaddr:long,size:long,argstr:string)
syscall.flistxattr(name:string,filedes:long,list_uaddr:long,size:long,argstr:string)
syscall.flock(name:string,fd:long,operation:long,argstr:string)
syscall.fork(clone_flags:long,stack_start:long,regs:long,stack_size:long,parent_tid_uaddr:long,child_tid_uaddr:long,name:string,argstr:string)
syscall.fremovexattr(name:string,filedes:long,name_uaddr:long,argstr:string)
syscall.fsetxattr(name:string,filedes:long,name2:string,value_uaddr:long,size:long,flags:long,argstr:string)
syscall.fstat(name:string,filedes:long,buf_uaddr:long,argstr:string)
syscall.fstatat(name:string,dirfd:long,path:string,buf_uaddr:long,argstr:string)
syscall.fstatfs(name:string,fd:long,buf_uaddr:long,argstr:string)
syscall.fstatfs64(name:string,fd:long,sz:long,buf_uaddr:long,argstr:string)
syscall.fsync(name:string,fd:long,argstr:string)
syscall.ftruncate(name:string,fd:long,length:long,argstr:string)
syscall.futex(name:string,futex_uaddr:long,op:long,val:long,utime_uaddr:long,uaddr2_uaddr:long,val3:long,argstr:string)
syscall.futimesat(name:string,dirfd:long,filename_uaddr:long,filename:string,tvp_uaddr:long,argstr:string)
syscall.get_mempolicy(name:string,policy_uaddr:long,nmask_uaddr:long,maxnode:long,addr:long,flags:long,argstr:string)
syscall.getcwd(name:string,buf_uaddr:long,size:long,argstr:string)
syscall.getdents(name:string,fd:long,dirp_uaddr:long,count:long,argstr:string)
syscall.getegid(name:string,argstr:string)
syscall.geteuid(name:string,argstr:string)
syscall.getgid(name:string,argstr:string)
syscall.getgroups(name:string,size:long,list_uaddr:long,argstr:string)
syscall.gethostname(name:string,name_uaddr:long,len:long,argstr:string)
syscall.getitimer(name:string,which:long,value_uaddr:long,argstr:string)
syscall.getpeername(name:string,s:long,name_uaddr:long,namelen_uaddr:long,argstr:string)
syscall.getpgid(name:string,pid:long,argstr:string)
syscall.getpgrp(name:string,argstr:string)
syscall.getpid(name:string,argstr:string)
syscall.getppid(name:string,argstr:string)
syscall.getpriority(name:string,which:long,who:long,argstr:string)
syscall.getresgid(name:string,rgid_uaddr:long,egid_uaddr:long,sgid_uaddr:long,argstr:string)
syscall.getresuid(name:string,ruid_uaddr:long,euid_uaddr:long,suid_uaddr:long,argstr:string)
syscall.getrlimit(name:string,resource:long,rlim_uaddr:long,argstr:string)
syscall.getrusage(name:string,who:long,who_str:string,usage_uaddr:long,argstr:string)
syscall.getsid(name:string,pid:long,argstr:string)
syscall.getsockname(name:string,s:long,name_uaddr:long,namelen_uaddr:long,argstr:string)
syscall.getsockopt(name:string,fd:long,level:long,level_str:string,optname:long,optname_str:string,optval_uaddr:long,optlen_uaddr:long,argstr:string)
syscall.gettid(name:string,argstr:string)
syscall.gettimeofday(name:string,tv_uaddr:long,tz_uaddr:long,argstr:string)
syscall.getuid(name:string,argstr:string)
syscall.getxattr(name:string,path:string,name2:string,value_uaddr:long,size:long,argstr:string)
syscall.init_module(name:string,umod_uaddr:long,len:long,uargs:string,argstr:string)
syscall.inotify_add_watch(name:string,fd:long,mask:long,path_uaddr:long,path:string,argstr:string)
syscall.inotify_init(name:string,argstr:string)
syscall.inotify_rm_watch(name:string,fd:long,wd:long,argstr:string)
syscall.io_cancel(name:string,ctx_id:long,iocb_uaddr:long,result_uaddr:long,argstr:string)
syscall.io_destroy(name:string,ctx:long,argstr:string)
syscall.io_getevents(name:string,ctx_id:long,min_nr:long,nr:long,events_uaddr:long,timeout_uaddr:long,timestr:string,argstr:string)
syscall.io_setup(name:string,maxevents:long,ctxp_uaddr:long,argstr:string)
syscall.io_submit(name:string,ctx_id:long,nr:long,iocbpp_uaddr:long,argstr:string)
syscall.ioctl(name:string,fd:long,request:long,argp:long,argstr:string)
syscall.ioperm(name:string,from:long,num:long,turn_on:long,argstr:string)
syscall.iopl(name:string,level:long,argstr:string)
syscall.ioprio_get(name:string,which:long,who:long,argstr:string)
syscall.ioprio_set(name:string,which:long,who:long,ioprio:long,argstr:string)
syscall.kexec_load(name:string,entry:long,nr_segments:long,segments_uaddr:long,flags:long,argstr:string)
syscall.keyctl(name:string,argstr:string)
syscall.kill(name:string,pid:long,sig:long,argstr:string)
syscall.lchown(name:string,path:string,owner:long,group:long,argstr:string)
syscall.lchown16(name:string,path:string,owner:long,group:long,argstr:string)
syscall.lgetxattr(name:string,path:string,name2:string,value_uaddr:long,size:long,argstr:string)
syscall.link(name:string,oldpath:string,newpath:string,argstr:string)
syscall.linkat(name:string,olddfd:long,olddfd_str:string,oldname:long,oldname_str:string,newdfd:long,newdfd_str:string,newname:long,newname_str:string,flags:long,flags_str:string,argstr:string)
syscall.listen(name:string,sockfd:long,backlog:long,argstr:string)
syscall.listxattr(name:string,list_uaddr:long,size:long,path_uaddr:long,path:string,argstr:string)
syscall.llistxattr(name:string,list_uaddr:long,size:long,path_uaddr:long,path:string,argstr:string)
syscall.llseek(name:string,fd:long,offset_high:long,offset_low:long,result_uaddr:long,whence:long,whence_str:string,argstr:string)
syscall.lookup_dcookie(name:string,cookie:long,buffer_uaddr:long,len:long,argstr:string)
syscall.lremovexattr(name:string,name_uaddr:long,name2:string,path_uaddr:long,path:string,argstr:string)
syscall.lseek(name:string,fildes:long,offset:long,whence:long,whence_str:string,argstr:string)
syscall.lsetxattr(name:string,path_uaddr:long,path:string,name_uaddr:long,name_str:string,value_uaddr:long,size:long,flags:long,argstr:string)
syscall.lstat(name:string,path:string,buf_uaddr:long,argstr:string)
syscall.madvise(name:string,start:long,length:long,advice:long,advice_str:string,argstr:string)
syscall.mbind(name:string,start:long,len:long,mode:long,nmask_uaddr:long,maxnode:long,flags:long,argstr:string)
syscall.migrate_pages(name:string,argstr:string)
syscall.mincore(name:string,start:long,length:long,vec_uaddr:long,argstr:string)
syscall.mkdir(name:string,pathname_uaddr:long,pathname:string,mode:long,argstr:string)
syscall.mkdirat(name:string,dirfd:long,pathname:string,mode:long,argstr:string)
syscall.mknod(name:string,pathname:string,mode:long,dev:long,argstr:string)
syscall.mknodat(name:string,dfd:long,dfd_str:string,filename:long,filename_str:string,mode:long,mode_str:string,dev:long,argstr:string)
syscall.mlock(name:string,addr:long,len:long,argstr:string)
syscall.mlockall(name:string,flags:long,argstr:string)
syscall.mmap(name:string,start:long,len:long,prot:long,flags:long,fd:long,offset:long,argstr:string)
syscall.mmap2(name:string,argstr:string)
syscall.mmap32(name:string,argstr:string)
syscall.modify_ldt(name:string,func:long,ptr_uaddr:long,bytecount:long,argstr:string)
syscall.mount(name:string,source:string,target:string,filesystemtype:string,mountflags:long,mountflags_str:string,data:string,argstr:string)
syscall.move_pages(name:string,argstr:string)
syscall.mprotect(name:string,addr:long,len:long,prot:long,prot_str:string,argstr:string)
syscall.mq_getsetattr(name:string,mqdes:long,u_mqstat_uaddr:long,u_omqstat_uaddr:long,argstr:string)
syscall.mq_notify(name:string,mqdes:long,notification_uaddr:long,argstr:string)
syscall.mq_open(name:string,name_uaddr:long,filename:string,mode:long,u_attr_uaddr:long,oflag:long,argstr:string)
syscall.mq_timedreceive(name:string,mqdes:long,msg_ptr_uaddr:long,msg_len:long,msg_prio_uaddr:long,abs_timout_uaddr:long,argstr:string)
syscall.mq_timedsend(name:string,mqdes:long,msg_ptr_uaddr:long,msg_len:long,msg_prio:long,abs_timeout_uaddr:long,argstr:string)
syscall.mq_unlink(name:string,u_name_uaddr:long,u_name:string,argstr:string)
syscall.mremap(name:string,old_address:long,old_size:long,new_size:long,flags:long,new_address:long,argstr:string)
syscall.msgctl(name:string,msqid:long,cmd:long,buf_uaddr:long,argstr:string)
syscall.msgget(name:string,key:long,msgflg:long,msgflg_str:string,argstr:string)
syscall.msgrcv(name:string,msqid:long,msgp_uaddr:long,msgsz:long,msgtyp:long,msgflg:long,argstr:string)
syscall.msgsnd(name:string,msqid:long,msgp_uaddr:long,msgsz:long,msgflg:long,argstr:string)
syscall.msync(name:string,start:long,length:long,flags:long,argstr:string)
syscall.munlock(name:string,addr:long,len:long,argstr:string)
syscall.munlockall(name:string,argstr:string)
syscall.munmap(name:string,start:long,length:long,argstr:string)
syscall.nanosleep(name:string,req_uaddr:long,rem_uaddr:long,argstr:string)
syscall.nfsservctl(name:string,cmd:long,argp_uaddr:long,resp_uaddr:long,argstr:string)
syscall.ni_syscall(name:string,argstr:string)
syscall.nice(name:string,inc:long,argstr:string)
syscall.open(name:string,filename:string,flags:long,mode:long,argstr:string)
syscall.openat(name:string,filename:string,flags:long,mode:long,argstr:string)
syscall.pause(name:string,argstr:string)
syscall.personality(name:string,persona:long,argstr:string)
syscall.pipe(name:string,argstr:string)
syscall.pipe32(name:string,argstr:string)
syscall.pivot_root(name:string,new_root_str:string,old_root_str:string,argstr:string)
syscall.poll(name:string,ufds_uaddr:long,nfds:long,timeout:long,argstr:string)
syscall.ppoll(name:string,argstr:string)
syscall.prctl(name:string,option:long,arg2:long,arg3:long,arg4:long,arg5:long,argstr:string)
syscall.pread(name:string,fd:long,buf_uaddr:long,count:long,offset:long,argstr:string)
syscall.pselect6(name:string,argstr:string)
syscall.pselect7(name:string,argstr:string)
syscall.ptrace(name:string,request:long,pid:long,addr:long,data:long,argstr:string)
syscall.pwrite(name:string,fd:long,buf_uaddr:long,count:long,offset:long,argstr:string)
syscall.quotactl(name:string,cmd:long,cmd_str:string,special:long,special_str:string,id:long,addr_uaddr:long,argstr:string)
syscall.read(name:string,fd:long,buf_uaddr:long,count:long,argstr:string)
syscall.readahead(name:string,fd:long,offset:long,count:long,argstr:string)
syscall.readdir(name:string,argstr:string)
syscall.readlink(name:string,path:string,buf_uaddr:long,bufsiz:long,argstr:string)
syscall.readlinkat(name:string,dfd:long,buf_uaddr:long,bufsiz:long,path:string,argstr:string)
syscall.readv(name:string,vector_uaddr:long,count:long,fd:long,argstr:string)
syscall.reboot(name:string,magic:long,magic_str:string,magic2:long,magic2_str:string,flag:long,flag_str:string,arg_uaddr:long,argstr:string)
syscall.recv(name:string,s:long,buf_uaddr:long,len:long,flags:long,flags_str:string,argstr:string)
syscall.recvfrom(name:string,s:long,buf_uaddr:long,len:long,flags:long,flags_str:string,addr_uaddr:long,addrlen_uaddr:long,argstr:string)
syscall.recvmsg(name:string,s:long,msg_uaddr:long,flags:long,flags_str:string,argstr:string)
syscall.remap_file_pages(name:string,start:long,size:long,prot:long,pgoff:long,flags:long,argstr:string)
syscall.removexattr(name:string,name_str:string,path:string,argstr:string)
syscall.rename(name:string,oldpath:string,newpath:string,argstr:string)
syscall.renameat(name:string,olddfd:long,olddfd_str:string,oldname:long,oldname_str:string,newdfd:long,newdfd_str:string,newname:long,newname_str:string,argstr:string)
syscall.request_key(name:string,type_uaddr:long,description_uaddr:long,callout_info_uaddr:long,destringid:long,argstr:string)
syscall.restart_syscall(name:string,argstr:string)
syscall.rmdir(name:string,pathname:string,argstr:string)
syscall.rt_sigaction(name:string,sig:long,act_uaddr:long,oact_uaddr:long,sigsetsize:long,argstr:string)
syscall.rt_sigaction32(name:string,sig:long,act_uaddr:long,oact_uaddr:long,sigsetsize:long,argstr:string)
syscall.rt_sigpending(name:string,set_uaddr:long,sigsetsize:long,argstr:string)
syscall.rt_sigprocmask(name:string,how:long,how_str:string,set_uaddr:long,oldset_uaddr:long,argstr:string)
syscall.rt_sigqueueinfo(name:string,pid:long,sig:long,uinfo_uaddr:long,argstr:string)
syscall.rt_sigreturn(name:string,argstr:string)
syscall.rt_sigsuspend(name:string,argstr:string)
syscall.rt_sigtimedwait(name:string,uthese_uaddr:long,uinfo_uaddr:long,uts_uaddr:long,sigsetsize:long,argstr:string)
syscall.sched_get_priority_max(name:string,policy:long,argstr:string)
syscall.sched_get_priority_min(name:string,policy:long,argstr:string)
syscall.sched_getaffinity(name:string,pid:long,len:long,mask_uaddr:long,argstr:string)
syscall.sched_getparam(name:string,pid:long,p_uaddr:long,argstr:string)
syscall.sched_getscheduler(name:string,pid:long,argstr:string)
syscall.sched_rr_get_interval(name:string,pid:long,tp_uaddr:long,argstr:string)
syscall.sched_setaffinity(name:string,pid:long,len:long,mask_uaddr:long,argstr:string)
syscall.sched_setparam(name:string,pid:long,p_uaddr:long,argstr:string)
syscall.sched_setscheduler(name:string,pid:long,policy:long,policy_str:string,p_uaddr:long,argstr:string)
syscall.sched_yield(name:string,argstr:string)
syscall.select(name:string,n:long,readfds_uaddr:long,writefds_uaddr:long,exceptfds_uaddr:long,timeout_uaddr:long,argstr:string)
syscall.semctl(name:string,semid:long,semnum:long,cmd:long,argstr:string)
syscall.semget(name:string,key:long,nsems:long,semflg:long,argstr:string)
syscall.semop(name:string,semid:long,tsops_uaddr:long,nsops:long,argstr:string)
syscall.semtimedop(name:string,semid:long,sops_uaddr:long,nsops:long,timeout_uaddr:long,argstr:string)
syscall.send(name:string,s:long,buf_uaddr:long,len:long,flags:long,flags_str:string,argstr:string)
syscall.sendfile(name:string,out_fd:long,in_fd:long,offset_uaddr:long,count:long,argstr:string)
syscall.sendmsg(name:string,s:long,msg_uaddr:long,flags:long,flags_str:string,argstr:string)
syscall.sendto(name:string,s:long,buf_uaddr:long,len:long,flags:long,flags_str:string,to_uaddr:long,tolen:long,argstr:string)
syscall.set_mempolicy(name:string,mode:long,nmask_uaddr:long,maxnode:long,argstr:string)
syscall.set_tid_address(name:string,tidptr_uaddr:long,argstr:string)
syscall.setdomainname(name:string,hostname_uaddr:long,len:long,argstr:string)
syscall.setfsgid(name:string,fsgid:long,argstr:string)
syscall.setfsuid(name:string,fsuid:long,argstr:string)
syscall.setgid(name:string,gid:long,argstr:string)
syscall.setgroups(name:string,size:long,list_uaddr:long,argstr:string)
syscall.sethostname(name:string,hostname_uaddr:long,name_str:string,len:long,argstr:string)
syscall.setitimer(name:string,which:long,value_uaddr:long,ovalue_uaddr:long,argstr:string)
syscall.setpgid(name:string,pid:long,pgid:long,argstr:string)
syscall.setpriority(name:string,which:long,which_str:string,who:long,prio:long,argstr:string)
syscall.setregid(name:string,rgid:long,egid:long,argstr:string)
syscall.setregid16(name:string,rgid:long,egid:long,argstr:string)
syscall.setresgid(name:string,rgid:long,egid:long,sgid:long,argstr:string)
syscall.setresgid16(name:string,rgid:long,egid:long,sgid:long,argstr:string)
syscall.setresuid(name:string,ruid:long,euid:long,suid:long,argstr:string)
syscall.setresuid16(name:string,ruid:long,euid:long,suid:long,argstr:string)
syscall.setreuid(name:string,ruid:long,euid:long,argstr:string)
syscall.setreuid16(name:string,ruid:long,euid:long,argstr:string)
syscall.setrlimit(name:string,resource:long,rlim_uaddr:long,argstr:string)
syscall.setsid(name:string,argstr:string)
syscall.setsockopt(name:string,fd:long,level:long,level_str:string,optname:long,optname_str:string,optval_uaddr:long,optlen:long,argstr:string)
syscall.settimeofday(name:string,tv_uaddr:long,tz_uaddr:long,argstr:string)
syscall.settimeofday32(name:string,tv_uaddr:long,tz_uaddr:long,argstr:string)
syscall.setuid(name:string,uid:long,argstr:string)
syscall.setxattr(name:string,path_uaddr:long,path:string,name_uaddr:long,name_str:string,value_uaddr:long,size:long,flags:long,argstr:string)
syscall.sgetmask(name:string,argstr:string)
syscall.shmat(name:string,shmid:long,shmaddr_uaddr:long,shmflg:long,argstr:string)
syscall.shmctl(name:string,shmid:long,cmd:long,buf_uaddr:long,argstr:string)
syscall.shmdt(name:string,shmaddr_uaddr:long,argstr:string)
syscall.shmget(name:string,key:long,size:long,shmflg:long,argstr:string)
syscall.shutdown(name:string,s:long,how:long,how_str:string,argstr:string)
syscall.sigaction32(name:string,sig:long,act_uaddr:long,oact_uaddr:long,argstr:string)
syscall.sigaltstack(name:string,uss_uaddr:long,uoss_uaddr:long,regs_uaddr:long,argstr:string)
syscall.signal(name:string,sig:long,handler:long,argstr:string)
syscall.signalfd(name:string,argstr:string)
syscall.sigpending(name:string,argstr:string)
syscall.sigprocmask(name:string,how:long,how_str:string,set_uaddr:long,oldset_uaddr:long,argstr:string)
syscall.sigreturn(name:string,argstr:string)
syscall.sigsuspend(name:string,argstr:string)
syscall.socket(name:string,family:long,type:long,protocol:long,argstr:string)
syscall.socketpair(name:string,family:long,type:long,protocol:long,sv_uaddr:long,argstr:string)
syscall.splice(name:string,argstr:string)
syscall.ssetmask(name:string,newmask:long,argstr:string)
syscall.stat(name:string,filename_uaddr:long,filename:string,buf_uaddr:long,argstr:string)
syscall.statfs(name:string,buf_uaddr:long,path:string,argstr:string)
syscall.statfs64(name:string,sz:long,buf_uaddr:long,path:string,argstr:string)
syscall.stime(name:string,t_uaddr:long,argstr:string)
syscall.swapoff(name:string,path:string,argstr:string)
syscall.swapon(name:string,path:string,swapflags:long,argstr:string)
syscall.symlink(name:string,oldpath:string,newpath:string,argstr:string)
syscall.symlinkat(name:string,oldname:long,oldname_str:string,newdfd:long,newdfd_str:string,newname:long,newname_str:string,argstr:string)
syscall.sync(name:string,argstr:string)
syscall.sysctl(name:string,argstr:string)
syscall.sysctl32(name:string,argstr:string)
syscall.sysfs(name:string,option:long,arg1:long,arg2:long,argstr:string)
syscall.sysinfo(name:string,info_uaddr:long,argstr:string)
syscall.syslog(name:string,type:long,bufp_uaddr:long,len:long,argstr:string)
syscall.tee(name:string,argstr:string)
syscall.tgkill(name:string,tgid:long,pid:long,sig:long,argstr:string)
syscall.time(name:string,t_uaddr:long,argstr:string)
syscall.timer_create(name:string,clockid:long,clockid_str:string,evp_uaddr:long,timerid_uaddr:long,argstr:string)
syscall.timer_delete(name:string,timerid:long,argstr:string)
syscall.timer_getoverrun(name:string,timerid:long,argstr:string)
syscall.timer_gettime(name:string,timerid:long,value_uaddr:long,argstr:string)
syscall.timer_settime(name:string,timerid:long,flags:long,value_uaddr:long,ovalue_uaddr:long,argstr:string)
syscall.times(name:string,argstr:string)
syscall.tkill(name:string,pid:long,sig:long,argstr:string)
syscall.truncate(name:string,path_uaddr:long,path:string,length:long,argstr:string)
syscall.umask(name:string,mask:long,argstr:string)
syscall.umount(name:string,target:string,flags:long,flags_str:string,argstr:string)
syscall.uname(name:string,argstr:string)
syscall.unlink(name:string,pathname_uaddr:long,pathname:string,argstr:string)
syscall.unlinkat(name:string,dfd:long,dfd_str:string,pathname:long,pathname_str:string,flag:long,flag_str:string,argstr:string)
syscall.unshare(name:string,unshare_flags:long,argstr:string)
syscall.uselib(name:string,library_uaddr:long,library:string,argstr:string)
syscall.ustat(name:string,dev:long,ubuf_uaddr:long,argstr:string)
syscall.ustat32(name:string,dev:long,argstr:string)
syscall.utime(name:string,filename_uaddr:long,filename:string,buf_uaddr:long,actime:long,modtime:long,argstr:string)
syscall.utimensat(name:string,argstr:string)
syscall.utimes(name:string,filename_uaddr:long,filename:string,tvp_uaddr:long,argstr:string)
syscall.vhangup(name:string,argstr:string)
syscall.vm86_warning(name:string)
syscall.vmsplice(name:string,argstr:string)
syscall.wait4(name:string,pid:long,status_uaddr:long,options:long,options_str:string,rusage_uaddr:long,argstr:string)
syscall.waitid(name:string,pid:long,which:long,which_str:string,infop_uaddr:long,options:long,options_str:string,rusage_uaddr:long,argstr:string)
syscall.write(name:string,fd:long,buf_uaddr:long,count:long,argstr:string)
syscall.writev(name:string,vector_uaddr:long,count:long,fd:long,argstr:string)
signal.check_ignored(sig_pid:long,pid_name:string,sig:long,sig_name:string)
signal.checkperm(sig:long,task:long,sinfo:long,name:string,sig_name:string,sig_pid:long,pid_name:string,si_code:string)
signal.do_action(sig:long,sigact_addr:long,oldsigact_addr:long,sa_handler:long,sa_mask:long)
signal.flush(task:long,sig_pid:long,pid_name:string)
signal.force_segv(sig_pid:long,pid_name:string,sig:long,sig_name:string)
signal.handle(sig:unknown,sig_name:string,sinfo:long,sig_code:long,ka_addr:unknown,oldset_addr:unknown,regs:unknown,sig_mode:string)
signal.pending(sigset_add:long,sigset_size:long)
signal.procmask(how:long,sigset_addr:long,oldsigset_addr:long,sigset:long)
signal.send(name:string,sig:long,task:long,sinfo:long,shared:long,send2queue:long,sig_name:string,sig_pid:long,pid_name:string,si_code:string)
signal.send_sig_queue(sig:long,sig_name:string,sig_pid:long,pid_name:string,sigqueue_addr:long)
signal.syskill(name:string,pid:long,sig:long,argstr:string,sig_name:string)
signal.systgkill(name:string,tgid:long,pid:long,sig:long,argstr:string,sig_name:string)
signal.systkill(name:string,pid:long,sig:long,argstr:string,sig_name:string)
signal.wakeup(sig_pid:long,pid_name:string,resume:long,state_mask:string)
begin(-1))
netdev.receive(dev_name:string,length:long,protocol:long,truesize:long)
netdev.transmit(dev_name:string,length:long,protocol:long,truesize:long)
ioblock.end(devname:string,ino:long,bytes_done:long,error:long,sector:long,flags:long,rw:long,vcnt:long,idx:long,phys_segments:long,hw_segments:long,size:long)
ioblock.request(devname:string,ino:long,sector:long,flags:long,rw:long,vcnt:long,idx:long,phys_segments:long,hw_segments:long,size:long,bdev:long,bdev_contains:long,p_start_sect:long)
ioscheduler.elv_add_request(elevator_name:string,disk_major:long,disk_minor:long,req:long,req_flags:long)
ioscheduler.elv_completed_request(elevator_name:string,disk_major:long,disk_minor:long,req:long,req_flags:long)
ioscheduler.elv_next_request(elevator_name:string)
nd_syscall.accept(name:string,sockfd:long,addr_uaddr:long,addrlen_uaddr:long,argstr:string)
nd_syscall.access(name:string,pathname:string,mode:long,mode_str:string,argstr:string)
nd_syscall.acct(name:string,filename:string,argstr:string)
nd_syscall.add_key(name:string,type_uaddr:long,description_uaddr:long,payload_uaddr:long,plen:long,ringid:long,argstr:string)
nd_syscall.adjtimex(name:string,argstr:string)
nd_syscall.alarm(name:string,seconds:long,argstr:string)
nd_syscall.bdflush(name:string,func:long,data:long,data_str:string,argstr:string)
nd_syscall.bind(name:string,sockfd:long,my_addr_uaddr:long,addrlen:long,argstr:string)
nd_syscall.brk(name:string,brk:long,argstr:string)
nd_syscall.capget(name:string,header_uaddr:long,data_uaddr:long,argstr:string)
nd_syscall.capset(name:string,header_uaddr:long,data_uaddr:long,argstr:string)
nd_syscall.chdir(name:string,path:string,argstr:string)
nd_syscall.chmod(name:string,path:string,mode:long,argstr:string)
nd_syscall.chown(name:string,path:string,owner:long,group:long,argstr:string)
nd_syscall.chown16(name:string,path:string,owner:long,group:long,argstr:string)
nd_syscall.chroot(name:string,path:string,argstr:string)
nd_syscall.clock_getres(name:string,clk_id:long,clk_id_str:string,res_uaddr:long,argstr:string)
nd_syscall.clock_gettime(name:string,clk_id:long,clk_id_str:string,argstr:string)
nd_syscall.clock_nanosleep(name:string,flags:long,flag_str:string,argstr:string)
nd_syscall.clock_settime(name:string,clk_id:long,clk_id_str:string,tp_uaddr:long,argstr:string)
nd_syscall.close(name:string,fd:long,argstr:string)
nd_syscall.compat_adjtimex(name:string,argstr:string)
nd_syscall.compat_clock_nanosleep(name:string,flags:long,flag_str:string,argstr:string)
nd_syscall.compat_execve(name:string,filename:string,args:string,argstr:string)
nd_syscall.compat_futex(name:string,futex_uaddr:long,op:long,val:long,utime_uaddr:long,uaddr2_uaddr:long,val3:long,argstr:string)
nd_syscall.compat_futimesat(name:string,dirfd:long,filename_uaddr:long,filename:string,tvp_uaddr:long,argstr:string)
nd_syscall.compat_getitimer(name:string,which:long,value_uaddr:long,argstr:string)
nd_syscall.compat_io_setup(name:string,maxevents:long,ctxp_uaddr:long,argstr:string)
nd_syscall.compat_io_submit(name:string,ctx_id:long,nr:long,iocbpp_uaddr:long,argstr:string)
nd_syscall.compat_sys_msgctl(name:string,argstr:string)
nd_syscall.compat_sys_msgrcv(name:string,argstr:string)
nd_syscall.compat_sys_msgsnd(name:string,argstr:string)
nd_syscall.connect(name:string,sockfd:long,serv_addr_uaddr:long,addrlen:long,argstr:string)
nd_syscall.creat(name:string,mode:long,pathname:string,argstr:string)
nd_syscall.delete_module(name:string,name_user:string,flags:long,argstr:string)
nd_syscall.dup(name:string,old_fd:long,argstr:string)
nd_syscall.dup2(name:string,oldfd:long,newfd:long,argstr:string)
nd_syscall.epoll_create(name:string,size:long,argstr:string)
nd_syscall.epoll_ctl(name:string,epfd:long,op:long,op_str:string,fd:long,event_uaddr:long,argstr:string)
nd_syscall.epoll_pwait(name:string,argstr:string)
nd_syscall.epoll_wait(name:string,epfd:long,events_uaddr:long,maxevents:long,timeout:long,argstr:string)
nd_syscall.eventfd(name:string,argstr:string)
nd_syscall.execve(name:string,filename:string,args:string,argstr:string)
nd_syscall.exit(name:string,status:long,argstr:string)
nd_syscall.exit_group(name:string,status:long,argstr:string)
nd_syscall.fadvise64(name:string,fs:long,offset:long,len:long,advice:long,argstr:string)
nd_syscall.fadvise64_64(name:string,fs:long,offset:long,len:long,advice:long,argstr:string)
nd_syscall.fchdir(name:string,fd:long,argstr:string)
nd_syscall.fchmod(name:string,fildes:long,mode:long,argstr:string)
nd_syscall.fchown(name:string,fd:long,owner:long,group:long,argstr:string)
nd_syscall.fchown16(name:string,fd:long,owner:long,group:long,argstr:string)
nd_syscall.fcntl(name:string,fd:long,cmd:long,cmd_str:string,arg:long,argstr:string)
nd_syscall.fdatasync(name:string,fd:long,argstr:string)
nd_syscall.fgetxattr(name:string,filedes:long,name2:string,value_uaddr:long,size:long,argstr:string)
nd_syscall.flistxattr(name:string,filedes:long,list_uaddr:long,size:long,argstr:string)
nd_syscall.flock(name:string,fd:long,operation:long,argstr:string)
nd_syscall.fork(clone_flags:long,stack_start:long,regs:long,stack_size:long,parent_tid_uaddr:long,child_tid_uaddr:long,name:string,argstr:string)
nd_syscall.fremovexattr(name:string,filedes:long,name_uaddr:long,argstr:string)
nd_syscall.fsetxattr(name:string,filedes:long,name2:string,value_uaddr:long,size:long,flags:long,argstr:string)
nd_syscall.fstat(name:string,filedes:long,buf_uaddr:long,argstr:string)
nd_syscall.fstatat(name:string,dirfd:long,path:string,buf_uaddr:long,argstr:string)
nd_syscall.fstatfs(name:string,fd:long,buf_uaddr:long,argstr:string)
nd_syscall.fstatfs64(name:string,fd:long,sz:long,buf_uaddr:long,argstr:string)
nd_syscall.fsync(name:string,fd:long,argstr:string)
nd_syscall.ftruncate(name:string,fd:long,length:long,argstr:string)
nd_syscall.futex(name:string,futex_uaddr:long,op:long,val:long,utime_uaddr:long,uaddr2_uaddr:long,val3:long,argstr:string)
nd_syscall.futimesat(name:string,dirfd:long,filename_uaddr:long,filename:string,tvp_uaddr:long,argstr:string)
nd_syscall.get_mempolicy(name:string,policy_uaddr:long,nmask_uaddr:long,maxnode:long,addr:long,flags:long,argstr:string)
nd_syscall.getcwd(name:string,buf_uaddr:long,size:long,argstr:string)
nd_syscall.getdents(name:string,fd:long,dirp_uaddr:long,count:long,argstr:string)
nd_syscall.getegid(name:string,argstr:string)
nd_syscall.geteuid(name:string,argstr:string)
nd_syscall.getgid(name:string,argstr:string)
nd_syscall.getgroups(name:string,size:long,list_uaddr:long,argstr:string)
nd_syscall.gethostname(name:string,name_uaddr:long,len:long,argstr:string)
nd_syscall.getitimer(name:string,which:long,value_uaddr:long,argstr:string)
nd_syscall.getpeername(name:string,s:long,name_uaddr:long,namelen_uaddr:long,argstr:string)
nd_syscall.getpgid(name:string,pid:long,argstr:string)
nd_syscall.getpgrp(name:string,argstr:string)
nd_syscall.getpid(name:string,argstr:string)
nd_syscall.getppid(name:string,argstr:string)
nd_syscall.getpriority(name:string,which:long,who:long,argstr:string)
nd_syscall.getresgid(name:string,rgid_uaddr:long,egid_uaddr:long,sgid_uaddr:long,argstr:string)
nd_syscall.getresuid(name:string,ruid_uaddr:long,euid_uaddr:long,suid_uaddr:long,argstr:string)
nd_syscall.getrlimit(name:string,resource:long,rlim_uaddr:long,argstr:string)
nd_syscall.getrusage(name:string,who:long,who_str:string,usage_uaddr:long,argstr:string)
nd_syscall.getsid(name:string,pid:long,argstr:string)
nd_syscall.getsockname(name:string,s:long,name_uaddr:long,namelen_uaddr:long,argstr:string)
nd_syscall.getsockopt(name:string,fd:long,level:long,level_str:string,optname:long,optname_str:string,optval_uaddr:long,optlen_uaddr:long,argstr:string)
nd_syscall.gettid(name:string,argstr:string)
nd_syscall.gettimeofday(name:string,tv_uaddr:long,tz_uaddr:long,argstr:string)
nd_syscall.getuid(name:string,argstr:string)
nd_syscall.getxattr(name:string,path:string,name2:string,value_uaddr:long,size:long,argstr:string)
nd_syscall.init_module(name:string,umod_uaddr:long,len:long,uargs:string,argstr:string)
nd_syscall.inotify_add_watch(name:string,fd:long,path_uaddr:long,path:string,mask:long,argstr:string)
nd_syscall.inotify_init(name:string,argstr:string)
nd_syscall.inotify_rm_watch(name:string,fd:long,wd:long,argstr:string)
nd_syscall.io_cancel(name:string,ctx_id:long,iocb_uaddr:long,result_uaddr:long,argstr:string)
nd_syscall.io_destroy(name:string,ctx:long,argstr:string)
nd_syscall.io_getevents(name:string,ctx_id:long,min_nr:long,nr:long,events_uaddr:long,timeout_uaddr:long,timestr:string,argstr:string)
nd_syscall.io_setup(name:string,maxevents:long,ctxp_uaddr:long,argstr:string)
nd_syscall.io_submit(name:string,ctx_id:long,nr:long,iocbpp_uaddr:long,argstr:string)
nd_syscall.ioctl(name:string,fd:long,request:long,argp:long,argstr:string)
nd_syscall.ioperm(name:string,from:long,num:long,turn_on:long,argstr:string)
nd_syscall.ioprio_get(name:string,which:long,who:long,argstr:string)
nd_syscall.ioprio_set(name:string,which:long,who:long,ioprio:long,argstr:string)
nd_syscall.kexec_load(name:string,entry:long,nr_segments:long,segments_uaddr:long,flags:long,argstr:string)
nd_syscall.keyctl(name:string,argstr:string)
nd_syscall.kill(name:string,pid:long,sig:long,argstr:string)
nd_syscall.lchown(name:string,path:string,owner:long,group:long,argstr:string)
nd_syscall.lchown16(name:string,path:string,owner:long,group:long,argstr:string)
nd_syscall.lgetxattr(name:string,path:string,name2:string,value_uaddr:long,size:long,argstr:string)
nd_syscall.link(name:string,oldpath:string,newpath:string,argstr:string)
nd_syscall.listen(name:string,sockfd:long,backlog:long,argstr:string)
nd_syscall.listxattr(name:string,path_uaddr:long,path:string,list_uaddr:long,size:long,argstr:string)
nd_syscall.llistxattr(name:string,path_uaddr:long,path:string,list_uaddr:long,size:long,argstr:string)
nd_syscall.llseek(name:string,fd:long,offset_high:long,offset_low:long,result_uaddr:long,whence:long,whence_str:string,argstr:string)
nd_syscall.lookup_dcookie(name:string,cookie:long,buffer_uaddr:long,len:long,argstr:string)
nd_syscall.lremovexattr(name:string,path_uaddr:long,path:string,name_uaddr:long,name2:string,argstr:string)
nd_syscall.lseek(name:string,fildes:long,offset:long,whence:long,whence_str:string,argstr:string)
nd_syscall.lsetxattr(name:string,path_uaddr:long,path:string,name_uaddr:long,name_str:string,value_uaddr:long,size:long,flags:long,argstr:string)
nd_syscall.lstat(name:string,path:string,buf_uaddr:long,argstr:string)
nd_syscall.madvise(name:string,start:long,length:long,advice:long,advice_str:string,argstr:string)
nd_syscall.mbind(name:string,start:long,len:long,mode:long,nmask_uaddr:long,maxnode:long,flags:long,argstr:string)
nd_syscall.migrate_pages(name:string,argstr:string)
nd_syscall.mincore(name:string,start:long,length:long,vec_uaddr:long,argstr:string)
nd_syscall.mkdir(name:string,pathname_uaddr:long,pathname:string,mode:long,argstr:string)
nd_syscall.mkdirat(name:string,dirfd:long,pathname:string,mode:long,argstr:string)
nd_syscall.mknod(name:string,pathname:string,mode:long,dev:long,argstr:string)
nd_syscall.mlock(name:string,addr:long,len:long,argstr:string)
nd_syscall.mlockall(name:string,flags:long,argstr:string)
nd_syscall.modify_ldt(name:string,func:long,ptr_uaddr:long,bytecount:long,argstr:string)
nd_syscall.mount(name:string,source:string,target:string,filesystemtype:string,mountflags:long,mountflags_str:string,data:string,argstr:string)
nd_syscall.move_pages(name:string,argstr:string)
nd_syscall.mprotect(name:string,addr:long,len:long,prot:long,prot_str:string,argstr:string)
nd_syscall.mq_getsetattr(name:string,mqdes:long,u_mqstat_uaddr:long,u_omqstat_uaddr:long,argstr:string)
nd_syscall.mq_notify(name:string,mqdes:long,notification_uaddr:long,argstr:string)
nd_syscall.mq_open(name:string,name_uaddr:long,filename:string,mode:long,u_attr_uaddr:long,oflag:long,argstr:string)
nd_syscall.mq_timedreceive(name:string,mqdes:long,msg_ptr_uaddr:long,msg_len:long,msg_prio_uaddr:long,abs_timout_uaddr:long,argstr:string)
nd_syscall.mq_timedsend(name:string,mqdes:long,msg_ptr_uaddr:long,msg_len:long,msg_prio:long,abs_timeout_uaddr:long,argstr:string)
nd_syscall.mq_unlink(name:string,u_name_uaddr:long,u_name:string,argstr:string)
nd_syscall.mremap(name:string,old_address:long,old_size:long,new_size:long,flags:long,new_address:long,argstr:string)
nd_syscall.msgctl(name:string,msqid:long,cmd:long,buf_uaddr:long,argstr:string)
nd_syscall.msgget(name:string,key:long,msgflg:long,msgflg_str:string,argstr:string)
nd_syscall.msgrcv(name:string,msqid:long,msgp_uaddr:long,msgsz:long,msgtyp:long,msgflg:long,argstr:string)
nd_syscall.msgsnd(name:string,msqid:long,msgp_uaddr:long,msgsz:long,msgflg:long,argstr:string)
nd_syscall.msync(name:string,start:long,length:long,flags:long,argstr:string)
nd_syscall.munlock(name:string,addr:long,len:long,argstr:string)
nd_syscall.munlockall(name:string,argstr:string)
nd_syscall.munmap(name:string,start:long,length:long,argstr:string)
vm.brk(address:long,length:long)
vm.mmap(address:unknown,length:unknown)
vm.munmap(address:long,length:long)
vm.oom_kill(task:long)
vm.pagefault(write_access:long,address:long)
vm.write_shared(address:long)
nfsd.close(filename:string,name:string,argstr:string)
nfsd.commit(fh:string,count:long,offset:long,flag:long,name:string,argstr:string,size:long,units:string)
nfsd.create(fh:string,filelen:long,filename:string,type:long,iap_valid:long,iap_mode:long,name:string,argstr:string)
nfsd.createv3(fh:string,filelen:long,filename:string,iap_valid:long,iap_mode:long,truncp:long,verfier:long,createmode:long,name:string,argstr:string)
nfsd.dispatch(client_ip:long,proto:long,version:long,xid:long,prog:long,proc:long,name:string,argstr:string)
nfsd.entries(fh:string,access:long,type:long,name:string,argstr:string)
nfsd.lookup(fh:string,filelen:long,filename:string,name:string,argstr:string)
nfsd.open(fh:string,access:long,type:long,name:string,argstr:string)
nfsd.read(fh:string,file:long,count:long,offset:long,vec:long,vlen:long,name:string,argstr:string,size:long,units:string)
nfsd.rename(fh:string,tfh:string,filelen:long,filename:string,tlen:long,tname:string,name:string,argstr:string)
nfsd.return(name:string,retstr:string)
nfsd.unlink(fh:string,filelen:long,filename:string,type:long,name:string,argstr:string)
nfsd.write(fh:string,file:long,count:long,offset:long,vec:long,vlen:long,name:string,argstr:string,size:long,units:string)
process.begin)
process.create(task:long,new_pid:long)
process.end)
process.exec(filename:string)
process.exec_complete(errno:long,success:long)
process.exit(code:long)
process.release(task:long,pid:long)
process.start)
process.syscall)
sunrpc.entry(name:string,progname:string,prog:long,vers:long,authflavor:long,servername:string,prot:long,port:long,argstr:string)
sunrpc.return(name:string,retstr:string)
scheduler.balance)
scheduler.cpu_off(task_prev:unknown,task_next:unknown,idle:long)
scheduler.cpu_on(task_prev:long,idle:long)
scheduler.ctxswitch(prev_pid:unknown,next_pid:unknown,prev_task:unknown,next_task:unknown,prevtsk_state:unknown)
scheduler.migrate(task:long,cpu_from:long,cpu_to:long)
scheduler.tick(idle:long)
scsi.iocompleted(host_no:long,channel:long,lun:long,dev_id:long,device_state:long,data_direction:long,req_addr:long,goodbytes:long)
scsi.iodispatching(host_no:long,channel:long,lun:long,dev_id:long,device_state:long,data_direction:long,request_buffer:long,request_bufflen:long,req_addr:long)
scsi.iodone(host_no:long,channel:long,lun:long,dev_id:long,device_state:long,data_direction:long,req_addr:long,scsi_timer_pending:long)
scsi.ioentry(disk_major:long,disk_minor:long,device_state:long,req_addr:long)
socket.aio_read(name:string,_sock:long,size:long,protocol:long,family:long,state:long,flags:long,type:long)
socket.aio_write(name:string,_sock:long,size:long,protocol:long,family:long,state:long,flags:long,type:long)
socket.close(name:string,protocol:long,family:long,state:long,flags:long,type:long)
socket.create(name:string,protocol:long,family:long,type:long,requester:long)
socket.receive(_dwarf_tvar_tid:long,_dwarf_tvar_sock_16_tmp:long,_dwarf_tvar_sock_17_tmp:long,_dwarf_tvar_sock_18_tmp:long,_dwarf_tvar_sock_19_tmp:long,_dwarf_tvar_sock_20_tmp:long,name:string,size:long,protocol:long,family:long,state:long,flags:long,type:long,success:long)
socket.recvmsg(name:string,size:long,protocol:long,family:long,state:long,flags:long,type:long)
socket.send(_dwarf_tvar_tid:long,_dwarf_tvar_sock_32_tmp:long,_dwarf_tvar_sock_33_tmp:long,_dwarf_tvar_sock_34_tmp:long,_dwarf_tvar_sock_35_tmp:long,_dwarf_tvar_sock_36_tmp:long,name:string,size:long,protocol:long,family:long,state:long,flags:long,type:long,success:long)
socket.sendmsg(name:string,size:long,protocol:long,family:long,state:long,flags:long,type:long)
kernel.function("sock_recvmsg@net/socket.c:649")(_dwarf_tvar_tid:long)
kernel.function("sock_aio_read@net/socket.c:750")(_dwarf_tvar_tid:long)
kernel.function("sock_sendmsg@net/socket.c:566")(_dwarf_tvar_tid:long)
kernel.function("sock_aio_write@net/socket.c:792")(_dwarf_tvar_tid:long)
begin(-1001)(num:long)
end(idx0:string)
tcp.disconnect(name:string,sock:long,flags:long)
tcp.recvmsg(name:string,sock:long,size:long)
tcp.sendmsg(name:string,sock:long,size:long)
tcp.setsockopt(name:string,sock:long,level:long,optname:long,optstr:string,optlen:long)
udp.disconnect(name:string,sock:long,flags:long)
udp.recvmsg(name:string,sock:long,size:long)
udp.sendmsg(name:string,sock:long,size:long)
generic.fop.aio_read(file:long,dev:long,devname:string,ino:long,pos:long,count:long,buf:long,name:string,argstr:string,size:long,units:string)
generic.fop.aio_write(file:long,dev:long,devname:string,ino:long,pos:long,count:long,buf:long,name:string,argstr:string,size:long,units:string)
generic.fop.llseek(dev:long,devname:string,ino:long,file:long,offset:long,origin:long,maxbyte:long,name:string,argstr:string)
generic.fop.mmap(file:long,dev:long,devname:string,ino:long,vm_start:long,vm_end:long,vm_flags:long,name:string,argstr:string)
generic.fop.open(dev:long,devname:string,ino:long,filename:string,flag:long,size:long,name:string,argstr:string)
generic.fop.splice_read(dev:long,devname:string,ino:long,file:long,len:long,flags:long,name:string,argstr:string,size:long,units:string)
generic.fop.splice_write(dev:long,devname:string,ino:long,file:long,len:long,flags:long,name:string,argstr:string,size:long,units:string)
